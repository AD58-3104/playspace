name: CMake

on:
  push:
    branches: [ refactoring_hr46_b3m/* ]
  pull_request:
    branches: [ refactoring_hr46_b3m_main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  HR46_PATH: /citbrains_humanoid/for2050/src/hr46_b3m 

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.

    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v2
      with:
        python-version: '3.9.0'
    - name: Setup environment
      run: |
          sudo apt install libboost-all-dev
          sudo apt install libyaml-cpp-dev
          sudo apt install libice-dev 
    - name: Print workspace
      run: echo ${{github.workspace}}
      run: cd ${{env.HR46_PATH}}
    # - name: Configure CMake
    #   # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
    #   # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
    #   run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    # - name: Build and Test
    #   # Build your program with the given configuration
    #   run: |
    #       cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    #       python3 degree_output_default.py ctest

    # - name: Test
    #   working-directory: ${{github.workspace}}/build
    #   # Execute tests defined by the CMake configuration.  
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   run: ctest -C ${{env.BUILD_TYPE}}
      
      